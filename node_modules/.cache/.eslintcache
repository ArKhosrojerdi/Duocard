[{"/Users/axiro/Codes/ts/my-app/src/index.tsx":"1","/Users/axiro/Codes/ts/my-app/src/reportWebVitals.ts":"2","/Users/axiro/Codes/ts/my-app/src/App.tsx":"3","/Users/axiro/Codes/ts/my-app/src/components/Home/Home.tsx":"4","/Users/axiro/Codes/ts/my-app/src/hoc/Misc/Misc.tsx":"5","/Users/axiro/Codes/ts/my-app/src/components/Header/Header.tsx":"6","/Users/axiro/Codes/ts/my-app/src/components/UI/Flex/Flex.tsx":"7","/Users/axiro/Codes/ts/my-app/src/components/UI/Grid/Grid.tsx":"8","/Users/axiro/Codes/ts/my-app/src/components/NewCard/Box.tsx":"9","/Users/axiro/Codes/ts/my-app/src/components/NewCard/WordType/WordType.tsx":"10","/Users/axiro/Codes/ts/my-app/src/components/NewCard/Input/Input.tsx":"11","/Users/axiro/Codes/ts/my-app/src/components/NewCard/Languages/Languages.tsx":"12","/Users/axiro/Codes/ts/my-app/src/store/WordTypes/WordTypes.tsx":"13","/Users/axiro/Codes/ts/my-app/src/store/index.ts":"14","/Users/axiro/Codes/ts/my-app/src/store/Words/reducer.ts":"15","/Users/axiro/Codes/ts/my-app/src/axios-cards.ts":"16","/Users/axiro/Codes/ts/my-app/src/store/Languages/reducer.ts":"17","/Users/axiro/Codes/ts/my-app/src/store/Words/state.ts":"18","/Users/axiro/Codes/ts/my-app/src/containers/Cards/Cards.tsx":"19","/Users/axiro/Codes/ts/my-app/src/components/Card/Card.tsx":"20"},{"size":613,"mtime":1616791098026,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1616116759285,"results":"23","hashOfConfig":"22"},{"size":489,"mtime":1616509207909,"results":"24","hashOfConfig":"22"},{"size":4643,"mtime":1616793133789,"results":"25","hashOfConfig":"22"},{"size":111,"mtime":1616526876591,"results":"26","hashOfConfig":"22"},{"size":809,"mtime":1616515804617,"results":"27","hashOfConfig":"22"},{"size":997,"mtime":1616643425513,"results":"28","hashOfConfig":"22"},{"size":641,"mtime":1616634888768,"results":"29","hashOfConfig":"22"},{"size":2119,"mtime":1616794551369,"results":"30","hashOfConfig":"22"},{"size":1393,"mtime":1616590277302,"results":"31","hashOfConfig":"22"},{"size":841,"mtime":1616610145159,"results":"32","hashOfConfig":"22"},{"size":1379,"mtime":1616544889927,"results":"33","hashOfConfig":"22"},{"size":342,"mtime":1616535335941,"results":"34","hashOfConfig":"22"},{"size":488,"mtime":1616793045913,"results":"35","hashOfConfig":"22"},{"size":207,"mtime":1616795341179,"results":"36","hashOfConfig":"22"},{"size":152,"mtime":1616791172064,"results":"37","hashOfConfig":"22"},{"size":232,"mtime":1616795469812,"results":"38","hashOfConfig":"22"},{"size":99,"mtime":1616794926888,"results":"39","hashOfConfig":"22"},{"size":788,"mtime":1616795426134,"results":"40","hashOfConfig":"22"},{"size":3119,"mtime":1616795483728,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ov0vr3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/axiro/Codes/ts/my-app/src/index.tsx",[],["84","85"],"/Users/axiro/Codes/ts/my-app/src/reportWebVitals.ts",[],"/Users/axiro/Codes/ts/my-app/src/App.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/Home/Home.tsx",["86"],"import React, {useState, useEffect} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport Header from \"../Header/Header\";\nimport Misc from \"../../hoc/Misc/Misc\";\nimport \"./Home.css\";\nimport CardBox from \"../NewCard/Box\";\nimport Flex from \"../UI/Flex/Flex\";\nimport Cards from \"../../containers/Cards/Cards\";\nimport * as WORD_TYPES from \"../../store/WordTypes/WordTypes\";\nimport axios from \"../../axios-cards\";\nimport {Word} from \"../../types/Word\";\nimport {Language} from \"../../types/Language\";\nimport {ErrorFields} from \"../../types/ErrorFields\";\n\nconst StyledButton = styled(Button)`\n  margin: 1rem 0;\n  background-color: #43a047;\n  width: 10rem;\n\n  :hover {\n    background-color: #388e3c;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nfunction Home() {\n  useEffect(() => {\n    axios.get('/cards.json')\n      .then(response => {\n        const res = response.data;\n        setWords(res[Object.keys(res)[Object.keys(res).length - 1]]);\n      })\n      .catch(() => setWords([]));\n  }, []);\n\n  const [word, setWord] = useState<string>(\"\");\n  const [tran, setTran] = useState<string>(\"\"); // Translation\n  const [lang, setLang] = useState<number>(0); // Language\n  const [langs, setLangs] = useState<Language[]>([\n    {\n      id: 0,\n      name: \"English\"\n    },\n    {\n      id: 1,\n      name: \"Spanish\"\n    },\n  ]);\n  const [words, setWords] = useState<Word[]>([]);\n  const [pos, setPos] = useState<string>(WORD_TYPES.NOUN);\n  const [errors, setErrors] = useState<ErrorFields>({\n    text: false,\n    tran: false,\n    lang: false,\n    pos: false\n  });\n\n  const addWordHandler = () => {\n    let flag: boolean[] = [false, false, false, false];\n\n    flag[0] = word === \"\";\n    flag[1] = tran === \"\";\n    flag[2] = lang === -1;\n    flag[3] = pos === \"\";\n\n    if (flag.some(f => f)) {\n      setErrors({\n        text: flag[0],\n        tran: flag[1],\n        lang: flag[2],\n        pos: flag[3]\n      });\n      return 0;\n    }\n\n    setErrors({\n      text: false,\n      tran: false,\n      lang: false,\n      pos: false\n    });\n\n    let newWords = [...words];\n    const id = newWords.length > 0 ? newWords[newWords.length - 1].id + 1 : 0;\n    newWords.push({\n      id: id,\n      text: word,\n      tran: tran,\n      lang: lang,\n      pos: pos\n    });\n    setWords(newWords);\n    axios.post('/cards.json', newWords);\n  }\n  const removeWordHandler = (id: number) => {\n    const newWords = words.filter(w => w.id !== id);\n    setWords(newWords);\n    axios.post('/cards.json', newWords);\n  }\n\n  const handleSetWord = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setWord(event.target.value as string);\n  };\n  const handleSetTranslation = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTran(event.target.value as string);\n  };\n  const handleSetLang = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLang(event.target.value as number);\n  };\n  const handleSetPos = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setPos(event.target.value as string);\n  };\n\n  return (\n    <Misc>\n      <Header/>\n      <Container>\n        <Flex direction=\"col\">\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Add a new Card\n          </Typography>\n          <br/>\n          <Flex direction=\"row\" justify=\"center\" gap={1}>\n            <CardBox\n              input={handleSetWord}\n              label=\"Word\"\n              placeholder=\"Write a new word...\"\n              langHandler={handleSetLang}\n              pos={pos}\n              posHandler={handleSetPos}\n              lang={lang}\n              langs={langs}\n              isWord\n              error={{text: errors.text, pos: errors.pos, lang: errors.lang}}\n            />\n            <CardBox\n              input={handleSetTranslation}\n              label=\"Translation\"\n              placeholder=\"Write the translation...\"\n              error={{text: errors.tran}}\n              pos=\"\"\n            />\n          </Flex>\n          <Flex\n            direction=\"row\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <StyledButton\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={addWordHandler}\n            >\n              Add\n            </StyledButton>\n          </Flex>\n        </Flex>\n\n        <Cards\n          removeHandler={removeWordHandler}\n        />\n      </Container>\n    </Misc>\n  );\n}\n\nexport default Home;\n","/Users/axiro/Codes/ts/my-app/src/hoc/Misc/Misc.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/Header/Header.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/UI/Flex/Flex.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/UI/Grid/Grid.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/NewCard/Box.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/NewCard/WordType/WordType.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/NewCard/Input/Input.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/NewCard/Languages/Languages.tsx",[],"/Users/axiro/Codes/ts/my-app/src/store/WordTypes/WordTypes.tsx",[],"/Users/axiro/Codes/ts/my-app/src/store/index.ts",[],"/Users/axiro/Codes/ts/my-app/src/store/Words/reducer.ts",[],"/Users/axiro/Codes/ts/my-app/src/axios-cards.ts",[],"/Users/axiro/Codes/ts/my-app/src/store/Languages/reducer.ts",[],"/Users/axiro/Codes/ts/my-app/src/store/Words/state.ts",[],"/Users/axiro/Codes/ts/my-app/src/containers/Cards/Cards.tsx",[],"/Users/axiro/Codes/ts/my-app/src/components/Card/Card.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":45,"column":17,"nodeType":"93","messageId":"94","endLine":45,"endColumn":25},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'setLangs' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]