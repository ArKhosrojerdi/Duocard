{"ast":null,"code":"var _jsxFileName = \"/Users/axiro/Codes/ts/my-app/src/components/Cards/Card/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MuiCard from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Transition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    minWidth: 275,\n    boxShadow: \"0 2px 6px rgba(127, 127, 127, .25)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginTop: 24\n  },\n  flip: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  },\n  text: {\n    transition: `all .5s ${theme.transitions.easing.easeInOut}`,\n    animation: `$fade .5s ${theme.transitions.easing.easeInOut}`\n  },\n  \"@keyframes fade\": {\n    \"0%\": {\n      opacity: 0,\n      transform: \"translateY(-.25rem)\"\n    },\n    \"100%\": {\n      opacity: 1,\n      transform: \"translateY(0)\"\n    }\n  }\n}));\n\nfunction Card(props) {\n  _s();\n\n  const classes = useStyles();\n  const [side, setSide] = useState(true);\n  let lang = null;\n\n  for (let l of props.langs) {\n    if (props.word.lang === l.id) {\n      lang = l.ln;\n      break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    style: {\n      transformOrigin: '0 0 -16'\n    },\n    ...(true ? {\n      timeout: 800\n    } : {}),\n    children: /*#__PURE__*/_jsxDEV(MuiCard, {\n      className: classes.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: lang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), side ? /*#__PURE__*/_jsxDEV(Transition, {\n          in: side,\n          timeout: 200,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: state => {\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              className: state === 'exiting' ? classes.Hide : classes.Show,\n              children: props.word.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Transition, {\n          in: !side,\n          timeout: 200,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            className: classes.text,\n            children: props.word.tran\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          children: props.word.pos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.flip,\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"small\",\n          onClick: () => {\n            setSide(side => !side);\n          },\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.flip,\n          variant: \"outlined\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: () => {\n            props.removeHandler(props.word.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"GrbcY9p77FhrD+NiqSSOzV/ps7A=\", false, function () {\n  return [useStyles];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/axiro/Codes/ts/my-app/src/components/Cards/Card/Card.tsx"],"names":["React","useState","MuiCard","CardActions","CardContent","Button","Typography","Grow","createStyles","makeStyles","Transition","useStyles","theme","root","minWidth","boxShadow","title","fontSize","pos","marginTop","flip","margin","textAlign","text","transition","transitions","easing","easeInOut","animation","opacity","transform","Card","props","classes","side","setSide","lang","l","langs","word","id","ln","transformOrigin","timeout","state","Hide","Show","tran","removeHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MuiCard from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Transition } from 'react-transition-group';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    minWidth: 275,\n    boxShadow: \"0 2px 6px rgba(127, 127, 127, .25)\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 24,\n  },\n  flip: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  },\n  text: {\n    transition: `all .5s ${theme.transitions.easing.easeInOut}`,\n    animation: `$fade .5s ${theme.transitions.easing.easeInOut}`,\n  },\n  \"@keyframes fade\": {\n    \"0%\": {\n      opacity: 0,\n      transform: \"translateY(-.25rem)\"\n    },\n    \"100%\": {\n      opacity: 1,\n      transform: \"translateY(0)\"\n    }\n  },\n}));\n\ntype Word = {\n  id: number;\n  text: string;\n  tran: string;\n  lang: number;\n  pos: string;\n}\n\ntype Lang = {\n  id: number;\n  ln: string;\n}\n\ntype MyProps = {\n  word: Word;\n  langs: Lang[];\n  removeHandler: any;\n}\n\nfunction Card(props: MyProps) {\n  const classes = useStyles();\n  const [side, setSide] = useState(true);\n  let lang: string | null = null;\n  for (let l of props.langs) {\n    if (props.word.lang === l.id) {\n      lang = l.ln;\n      break;\n    }\n  }\n\n  return (\n    <Grow\n      in={true}\n      style={{ transformOrigin: '0 0 -16' }}\n      {...(true ? { timeout: 800 } : {})}\n    >\n      <MuiCard className={classes.root} variant={\"outlined\"}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {lang}\n          </Typography>\n          {side ?\n            <Transition\n              in={side}\n              timeout={200}\n              mountOnEnter\n              unmountOnExit\n            >\n              {state => {\n          return (\n            <Typography variant=\"h5\" component=\"h2\" className={state === 'exiting' ? classes.Hide : classes.Show}>\n                {props.word.text}\n              </Typography>\n          )\n        }}\n              \n            </Transition>\n            :\n            <Transition\n              in={!side}\n              timeout={200}\n              mountOnEnter\n              unmountOnExit\n            >\n              <Typography variant=\"h5\" component=\"h2\" className={classes.text}>\n                {props.word.tran}\n              </Typography>\n            </Transition>\n          }\n          {/* <Typography variant=\"h5\" component=\"h2\" className={classes.text}>\n            {side ? props.word.text : props.word.tran}\n          </Typography> */}\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {props.word.pos}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            className={classes.flip}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              setSide(side => !side)\n            }}\n          >\n            Flip\n          </Button>\n\n          <Button\n            className={classes.flip}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={() => {\n              props.removeHandler(props.word.id)\n            }}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      </MuiCard>\n    </Grow >\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}