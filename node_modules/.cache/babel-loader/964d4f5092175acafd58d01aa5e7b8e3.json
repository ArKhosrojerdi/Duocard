{"ast":null,"code":"var _jsxFileName = \"/Users/axiro/Codes/ts/my-app/src/components/Cards/Card/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiCard from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    boxShadow: \"0 2px 6px rgba(127, 127, 127, .25)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginTop: 24\n  },\n  flip: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  }\n});\n\nfunction Card(props) {\n  _s();\n\n  const classes = useStyles();\n  const [side, setSide] = useState(true);\n  let lang = null;\n\n  for (let l of props.langs) {\n    if (props.lang === l.id) {\n      lang = l.ln;\n      break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    style: {\n      transformOrigin: '0 0 -16'\n    },\n    ...(true ? {\n      timeout: 800\n    } : {}),\n    children: /*#__PURE__*/_jsxDEV(MuiCard, {\n      className: classes.root,\n      variant: \"outlined\",\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: lang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: side ? props.word.text : props.word.tran\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          children: props.pos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.flip,\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"small\",\n          onClick: () => {\n            setSide(side => !side);\n          },\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.flip,\n          variant: \"outlined\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: () => {\n            removeHandler(props);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"GrbcY9p77FhrD+NiqSSOzV/ps7A=\", false, function () {\n  return [useStyles];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/axiro/Codes/ts/my-app/src/components/Cards/Card/Card.tsx"],"names":["React","useState","makeStyles","MuiCard","CardActions","CardContent","Button","Typography","Grow","useStyles","root","minWidth","boxShadow","title","fontSize","pos","marginTop","flip","margin","textAlign","Card","props","classes","side","setSide","lang","l","langs","id","ln","transformOrigin","timeout","word","text","tran","removeHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiCard from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    boxShadow: \"0 2px 6px rgba(127, 127, 127, .25)\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 24,\n  },\n  flip: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  }\n});\n\ntype Word = {\n  id: number;\n  text: string;\n  tran: string;\n  lang: number;\n  pos: string;\n}\n\ntype Lang = {\n  id: number;\n  ln: string;\n}\n\ntype MyProps = {\n  word: Word;\n  langs: Lang[];\n  removeHandler: any;\n}\n\nfunction Card(props: MyProps) {\n  const classes = useStyles();\n  const [side, setSide] = useState(true);\n  let lang: string | null = null;\n  for (let l of props.langs) {\n    if (props.lang === l.id) {\n      lang = l.ln;\n      break;\n    }\n  }\n\n  return (\n    <Grow\n      in={true}\n      style={{ transformOrigin: '0 0 -16' }}\n      {...(true ? { timeout: 800 } : {})}\n    >\n      <MuiCard className={classes.root} variant={\"outlined\"}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {lang}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {side ? props.word.text : props.word.tran}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {props.pos}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            className={classes.flip}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              setSide(side => !side)\n            }}\n          >\n            Flip\n          </Button>\n\n          <Button\n            className={classes.flip}\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={() => {\n              removeHandler(props)\n            }}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      </MuiCard>\n    </Grow>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}