{"ast":null,"code":"var _jsxFileName = \"/Users/axiro/Codes/ts/my-app/src/components/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport Header from \"../Header/Header\";\nimport Misc from \"../../hoc/Misc/Misc\";\nimport \"./Home.css\";\nimport CardBox from \"../NewCard/Box\";\nimport Flex from \"../UI/Flex/Flex\";\nimport Grid from \"../UI/Grid/Grid\";\nimport Cards from \"../Cards/Cards\";\nimport * as WORD_TYPES from \"../../store/WordTypes/WordTypes\";\nimport axios from \"../../axios-cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled(Button)`\n  margin: 1rem 0;\n  background-color: #43a047;\n  width: 10rem;\n\n  :hover {\n    background-color: #388e3c;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n_c = StyledButton;\n\nfunction Home() {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  const [tran, setTran] = useState(\"\"); // Translation\n\n  const [lang, setLang] = useState(0); // Language\n\n  const [langs, setLangs] = useState([{\n    id: 0,\n    ln: \"English\"\n  }, {\n    id: 1,\n    ln: \"Spanish\"\n  }]);\n  const [words, setWords] = useState([{\n    id: 0,\n    text: \"Versatile\",\n    tran: \"همه‌کاره\",\n    lang: 0,\n    pos: WORD_TYPES.ADJECTIVE\n  }]);\n  useEffect(() => {\n    axios.get('/cards.json').then(response => {\n      setWords(response.data);\n      console.log(response.data);\n    });\n  }, [words]);\n  const [pos, setPos] = useState(WORD_TYPES.NOUN);\n  const [errors, setErrors] = useState({\n    word: false,\n    tran: false,\n    lang: false,\n    pos: false\n  });\n\n  const addWordHandler = () => {\n    let flag = [false, false, false, false];\n    flag[0] = word === \"\";\n    flag[1] = tran === \"\";\n    flag[2] = lang === -1;\n    flag[3] = pos === \"\";\n\n    if (flag.some(f => f)) {\n      setErrors({\n        word: flag[0],\n        tran: flag[1],\n        lang: flag[2],\n        pos: flag[3]\n      });\n      return 0;\n    }\n\n    setErrors({\n      word: false,\n      tran: false,\n      lang: false,\n      pos: false\n    });\n    let newWords = [...words];\n    const id = newWords[newWords.length - 1].id + 1;\n    newWords.push({\n      id: id,\n      text: word,\n      tran: tran,\n      lang: lang,\n      pos: pos\n    });\n    setWords(newWords);\n    axios.post('/cards.json', newWords);\n  };\n\n  const handleSetWord = event => {\n    setWord(event.target.value);\n  };\n\n  const handleSetTranslation = event => {\n    setTran(event.target.value);\n  };\n\n  const handleSetLang = event => {\n    setLang(event.target.value);\n  };\n\n  const handleSetPos = event => {\n    setPos(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Misc, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        direction: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          gutterBottom: true,\n          children: \"Add a new Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(CardBox, {\n            input: handleSetWord,\n            label: \"Word\",\n            placeholder: \"Write a new word...\",\n            langHandler: handleSetLang,\n            pos: pos,\n            posHandler: handleSetPos,\n            lang: lang,\n            langs: langs,\n            isWord: true,\n            error: {\n              text: errors.word,\n              pos: errors.pos,\n              lang: errors.lang\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBox, {\n            input: handleSetTranslation,\n            label: \"Translation\",\n            placeholder: \"Write the translation...\",\n            error: {\n              text: errors.tran\n            },\n            pos: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          direction: \"row\",\n          align: \"center\",\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(StyledButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: addWordHandler,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        words: words,\n        langs: langs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"BzFPOT57w9czLNHu45Soil+nVxk=\");\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/axiro/Codes/ts/my-app/src/components/Home/Home.tsx"],"names":["React","useState","useEffect","Button","Container","Typography","styled","Header","Misc","CardBox","Flex","Grid","Cards","WORD_TYPES","axios","StyledButton","Home","word","setWord","tran","setTran","lang","setLang","langs","setLangs","id","ln","words","setWords","text","pos","ADJECTIVE","get","then","response","data","console","log","setPos","NOUN","errors","setErrors","addWordHandler","flag","some","f","newWords","length","push","post","handleSetWord","event","target","value","handleSetTranslation","handleSetLang","handleSetPos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport Header from \"../Header/Header\";\nimport Misc from \"../../hoc/Misc/Misc\";\nimport \"./Home.css\";\nimport CardBox from \"../NewCard/Box\";\nimport Flex from \"../UI/Flex/Flex\";\nimport Grid from \"../UI/Grid/Grid\";\nimport Cards from \"../Cards/Cards\";\nimport * as WORD_TYPES from \"../../store/WordTypes/WordTypes\";\nimport axios from \"../../axios-cards\";\n\nconst StyledButton = styled(Button)`\n  margin: 1rem 0;\n  background-color: #43a047;\n  width: 10rem;\n\n  :hover {\n    background-color: #388e3c;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nfunction Home() {\n  const [word, setWord] = useState<string>(\"\");\n  const [tran, setTran] = useState<string>(\"\"); // Translation\n  const [lang, setLang] = useState<number>(0); // Language\n  const [langs, setLangs] = useState([\n    {\n      id: 0,\n      ln: \"English\"\n    },\n    {\n      id: 1,\n      ln: \"Spanish\"\n    },\n  ]);\n  const [words, setWords] = useState([\n    {\n      id: 0,\n      text: \"Versatile\",\n      tran: \"همه‌کاره\",\n      lang: 0,\n      pos: WORD_TYPES.ADJECTIVE\n    }\n  ]);\n\n  useEffect(() => {\n    axios.get('/cards.json')\n      .then((response) => {\n        setWords(response.data);\n        console.log(response.data);\n      });\n  }, [words]);\n  \n  const [pos, setPos] = useState<string>(WORD_TYPES.NOUN);\n  const [errors, setErrors] = useState({\n    word: false,\n    tran: false,\n    lang: false,\n    pos: false\n  });\n\n  const addWordHandler = () => {\n    let flag: boolean[] = [false, false, false, false];\n\n    flag[0] = word === \"\";\n    flag[1] = tran === \"\";\n    flag[2] = lang === -1;\n    flag[3] = pos === \"\";\n\n    if (flag.some(f => f)) {\n      setErrors({\n        word: flag[0],\n        tran: flag[1],\n        lang: flag[2],\n        pos: flag[3]\n      });\n      return 0;\n    }\n\n    setErrors({\n      word: false,\n      tran: false,\n      lang: false,\n      pos: false\n    });\n\n    let newWords = [...words];\n    const id = newWords[newWords.length - 1].id + 1;\n\n    newWords.push({\n      id: id,\n      text: word,\n      tran: tran,\n      lang: lang,\n      pos: pos\n    });\n    setWords(newWords);\n    axios.post('/cards.json', newWords);\n  }\n\n  const handleSetWord = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setWord(event.target.value as string);\n  };\n  const handleSetTranslation = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTran(event.target.value as string);\n  };\n  const handleSetLang = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLang(event.target.value as number);\n  };\n  const handleSetPos = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setPos(event.target.value as string);\n  };\n\n  return (\n    <Misc>\n      <Header />\n      <Container>\n        <Flex direction=\"col\">\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Add a new Card\n          </Typography>\n          <br />\n          <Grid>\n            <CardBox\n              input={handleSetWord}\n              label=\"Word\"\n              placeholder=\"Write a new word...\"\n              langHandler={handleSetLang}\n              pos={pos}\n              posHandler={handleSetPos}\n              lang={lang}\n              langs={langs}\n              isWord\n              error={{ text: errors.word, pos: errors.pos, lang: errors.lang }}\n            />\n            <CardBox\n              input={handleSetTranslation}\n              label=\"Translation\"\n              placeholder=\"Write the translation...\"\n              error={{ text: errors.tran }}\n              pos=\"\"\n            />\n          </Grid>\n          <Flex\n            direction=\"row\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <StyledButton\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={addWordHandler}\n            >\n              Add\n            </StyledButton>\n          </Flex>\n        </Flex>\n\n        <Cards\n          words={words}\n          langs={langs}\n        />\n      </Container>\n    </Misc>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}