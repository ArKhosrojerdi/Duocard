{"ast":null,"code":"var _jsxFileName = \"/Users/axiro/Codes/ts/my-app/src/components/Cards/Cards.tsx\";\nimport React from 'react';\nimport Grid from \"../UI/Grid/Grid\";\nimport Card from \"./Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards(props) {\n  console.log(props.words);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: props.words.map((word, index) => /*#__PURE__*/_jsxDEV(Card, {\n      text: word.text,\n      tran: word.tran,\n      lang: word.lang,\n      pos: word.pos,\n      langs: props.langs\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/axiro/Codes/ts/my-app/src/components/Cards/Cards.tsx"],"names":["React","Grid","Card","Cards","props","console","log","words","map","word","index","text","tran","lang","pos","langs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAmBA,SAASC,KAAT,CAAeC,KAAf,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AAEA,sBACE,QAAC,IAAD;AAAA,cACGH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAaC,KAAb,kBACf,QAAC,IAAD;AAEE,MAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,MAAA,IAAI,EAAEF,IAAI,CAACG,IAHb;AAIE,MAAA,IAAI,EAAEH,IAAI,CAACI,IAJb;AAKE,MAAA,GAAG,EAAEJ,IAAI,CAACK,GALZ;AAME,MAAA,KAAK,EAAEV,KAAK,CAACW;AANf,OACOL,KADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAjBQP,K;AAmBT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport Grid from \"../UI/Grid/Grid\";\nimport Card from \"./Card/Card\";\n\ntype Word = {\n  text: string;\n  tran: string;\n  lang: number;\n  pos: string;\n}\n\ntype Lang = {\n  id: number;\n  ln: string;\n}\n\ntype MyProps = {\n  words: Word[];\n  langs: Lang[];\n}\n\nfunction Cards(props: MyProps) {\n  console.log(props.words);\n\n  return (\n    <Grid>\n      {props.words.map((word: Word, index: number) =>\n        <Card\n          key={index}\n          text={word.text}\n          tran={word.tran}\n          lang={word.lang}\n          pos={word.pos}\n          langs={props.langs}\n        />\n      )}\n    </Grid>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}