{"ast":null,"code":"var _jsxFileName = \"/Users/axiro/Codes/ts/my-app/src/components/Cards/Card/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MuiCard from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    minWidth: 275,\n    boxShadow: \"0 2px 6px rgba(127, 127, 127, .25)\",\n    position: \"relative\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginTop: 24\n  },\n  flip: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  },\n  text: {\n    transition: `all .5s ${theme.transitions.easing.easeInOut}`\n  },\n  rot: {\n    transform: \"rotateX(180deg)\"\n  },\n  front: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backfaceVisibility: \"hidden\"\n  },\n  back: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backfaceVisibility: \"hidden\",\n    transform: \"rotateY(180deg)\"\n  }\n}));\n\nfunction Card(props) {\n  _s();\n\n  const classes = useStyles();\n  const [side, setSide] = useState(true);\n  let lang = null;\n\n  for (let l of props.langs) {\n    if (props.word.lang === l.id) {\n      lang = l.ln;\n      break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    style: {\n      transformOrigin: '0 0 -16',\n      transform: side ? \"\" : \"rotateY(180deg)\"\n    },\n    ...(true ? {\n      timeout: 800\n    } : {}),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\" + side ? classes.rot : \"\",\n      children: [/*#__PURE__*/_jsxDEV(MuiCard, {\n        className: classes.root + classes.front,\n        variant: \"outlined\",\n        style: {\n          backfaceVisibility: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: lang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: props.word.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.pos,\n            color: \"textSecondary\",\n            children: props.word.pos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.flip,\n            variant: \"outlined\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: () => {\n              setSide(side => !side);\n            },\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.flip,\n            variant: \"outlined\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: () => {\n              props.removeHandler(props.word.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MuiCard, {\n        className: classes.root + classes.back,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: lang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            className: classes.text,\n            children: props.word.tran\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.pos,\n            color: \"textSecondary\",\n            children: props.word.pos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.flip,\n            variant: \"outlined\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: () => {\n              setSide(side => !side);\n            },\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.flip,\n            variant: \"outlined\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: () => {\n              props.removeHandler(props.word.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"GrbcY9p77FhrD+NiqSSOzV/ps7A=\", false, function () {\n  return [useStyles];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/axiro/Codes/ts/my-app/src/components/Cards/Card/Card.tsx"],"names":["React","useState","MuiCard","CardActions","CardContent","Button","Typography","Grow","createStyles","makeStyles","useStyles","theme","root","minWidth","boxShadow","position","title","fontSize","pos","marginTop","flip","margin","textAlign","text","transition","transitions","easing","easeInOut","rot","transform","front","width","height","backfaceVisibility","back","Card","props","classes","side","setSide","lang","l","langs","word","id","ln","transformOrigin","timeout","removeHandler","tran"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MuiCard from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    minWidth: 275,\n    boxShadow: \"0 2px 6px rgba(127, 127, 127, .25)\",\n    position: \"relative\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginTop: 24,\n  },\n  flip: {\n    margin: \"auto\",\n    textAlign: \"center\"\n  },\n  text: {\n    transition: `all .5s ${theme.transitions.easing.easeInOut}`,\n  },\n  rot: {\n    transform: \"rotateX(180deg)\"\n  },\n  front: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backfaceVisibility: \"hidden\",\n  },\n  back: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backfaceVisibility: \"hidden\",\n    transform: \"rotateY(180deg)\"\n  }\n}));\n\ntype Word = {\n  id: number;\n  text: string;\n  tran: string;\n  lang: number;\n  pos: string;\n}\n\ntype Lang = {\n  id: number;\n  ln: string;\n}\n\ntype MyProps = {\n  word: Word;\n  langs: Lang[];\n  removeHandler: any;\n}\n\nfunction Card(props: MyProps) {\n  const classes = useStyles();\n  const [side, setSide] = useState(true);\n  let lang: string | null = null;\n  for (let l of props.langs) {\n    if (props.word.lang === l.id) {\n      lang = l.ln;\n      break;\n    }\n  }\n\n  return (\n    <Grow\n      in={true}\n      style={{ transformOrigin: '0 0 -16', transform: side ? \"\" : \"rotateY(180deg)\" }}\n      {...(true ? { timeout: 800 } : {})}\n    >\n      <div className={\"inner\" + side ? classes.rot : \"\"}>\n        <MuiCard className={classes.root + classes.front} variant={\"outlined\"} style={{backfaceVisibility: \"hidden\"}}>\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {lang}\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n            >\n              {props.word.text}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {props.word.pos}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              className={classes.flip}\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => {\n                setSide(side => !side)\n              }}\n            >\n              Flip\n            </Button>\n\n            <Button\n              className={classes.flip}\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() => {\n                props.removeHandler(props.word.id)\n              }}\n            >\n              Delete\n            </Button>\n          </CardActions>\n        </MuiCard>\n\n        <MuiCard className={classes.root + classes.back} variant={\"outlined\"}>\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {lang}\n            </Typography>\n            <Typography\n              variant=\"h5\"\n              component=\"h2\"\n              className={classes.text}\n            >\n              {props.word.tran}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {props.word.pos}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              className={classes.flip}\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => {\n                setSide(side => !side)\n              }}\n            >\n              Flip\n            </Button>\n\n            <Button\n              className={classes.flip}\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() => {\n                props.removeHandler(props.word.id)\n              }}\n            >\n              Delete\n            </Button>\n          </CardActions>\n        </MuiCard>\n      </div>\n    </Grow >\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}